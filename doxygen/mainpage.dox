@mainpage Welcome to LibJWT

@warning The current LibJWT code is under heavy reconstruction and is changing
wildly from the API and ABI of v2 and prior. There's still a lot going on here,
and there are no guarantees that this new API is set in stone. Users beware. If
you want to see the older documentation,
[here's the latest](https://libjwt.io/stable)

@section standards \emoji :bulb: Supported Standards

Standard             | RFC        | Description
-------------------- | :--------: | --------------------------------------
``JWT``              | @rfc{7519} | JSON Web Token
``JWA``              | @rfc{7518} | JSON Web Algorithms
``JWS`` and ``JWE``  | @rfc{7518} | Specific types of JWT
``JWK`` and ``JWKS`` | @rfc{7517} | JSON Web Keys and Sets

@note Throughout this documentation you will see links such as the ones
above to RFC documents. These are relevant to that particular part of the
library and are helpful to understand some of the specific standards that
shaped the development of LibJWT.

@section building \emoji :construction: Build Prerequisites

@subsection req Required

- [JANSSON](https://github.com/akheron/jansson) (>= 2.0)
- [CMake](https://cmake.org) (>= 3.7)

@subsection req_crypto Crypto support

- OpenSSL (>= 3.0.0)
- GnuTLS (>= 3.6.0)

@note OpenSSL is required and used for JWK(S) operations. GnuTLS is optional
 for use in signing and verifying if configured.

@subsection optional Optional

- [Check Library](https://github.com/libcheck/check/issues) (>= 0.9.10) for unit
  testing
- [Doxygen](https://www.doxygen.nl) (>= 1.13.0) for documentation

@section docs \emoji :open_book: Docs and Source

\emoji :link: [Current codebase](https://libjwt.io)

\emoji :link: [Stable](https://libjwt.io/stable)

\emoji :link: [GitHub Repo](https://github.com/benmcollins/libjwt)

@section prebuilt \emoji :package: Pre-built Packages

LibJWT is available in most Linux distributions as well as through
[Homebrew](https://formulae.brew.sh/formula/libjwt#default)
for Linux, macOS, and Windows.

@section instructions \emoji :hammer: Build Instructions

@subsection cmake With CMake:

@code{.sh}
$ mkdir build
$ cd build
$ cmake ..
$ make
@endcode
